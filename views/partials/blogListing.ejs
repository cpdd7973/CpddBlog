<h2 class="text-center my-4 page-title"><%= heading %></h2>
<% 
  function formatDate(date) {
    const d = new Date(date);
    const day = d.getDate().toString().padStart(2, '0');
    const month = (d.getMonth() + 1).toString().padStart(2, '0'); // Months are zero-based
    const year = d.getFullYear();
    return `${day}/${month}/${year}`;
  }
%>
<% if(blogs.length > 0) { %>
  <div class="blog-listing-wrapper">
    <% blogs.forEach(blog => { %>
      <% const blogUrl = `https://cpddblog.onrender.com/blogs/${blog._id}`; %>
      <div class="card blog-listing-item shadow-sm border-0">
        <div class="image-wrapper position-relative">
          <a class="text-dark text-decoration-none" href="/blogs/<%= blog._id %>">
            <img src="<%= blog.blogCoverImage %>" class="card-img-top" alt="blog cover image">
          </a>
          <div class="share-buttons">
            <!-- <p>Share this post:</p> -->
            <a class="social-icons d-flex justify-content-center align-items-center" href="https://www.facebook.com/sharer/sharer.php?u=<%= encodeURIComponent(blogUrl) %>" target="_blank">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512" height="20" width="20" fill="#0e5ddd">
                <path d="M80 299.3V512H196V299.3h86.5l18-97.8H196V166.9c0-51.7 20.3-71.5 72.7-71.5c16.3 0 29.4 .4 37 1.2V7.9C291.4 4 256.4 0 236.2 0C129.3 0 80 50.5 80 159.4v42.1H14v97.8H80z"/>
              </svg>
            </a>
            <a class="social-icons d-flex justify-content-center align-items-center" href="https://twitter.com/intent/tweet?url=<%= encodeURIComponent(blogUrl) %>&text=<%= encodeURIComponent(blog.title) %>" target="_blank">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" height="20" width="20" fill="#0e5ddd">
                <path d="M389.2 48h70.6L305.6 224.2 487 464H345L233.7 318.6 106.5 464H35.8L200.7 275.5 26.8 48H172.4L272.9 180.9 389.2 48zM364.4 421.8h39.1L151.1 88h-42L364.4 421.8z"/>
              </svg>
            </a>
            <a class="social-icons d-flex justify-content-center align-items-center" href="https://www.linkedin.com/shareArticle?mini=true&url=<%= encodeURIComponent(blogUrl) %>&title=<%= encodeURIComponent(blog.title) %>" target="_blank">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" height="20" width="20" fill="#0e5ddd">
                <path d="M100.3 448H7.4V148.9h92.9zM53.8 108.1C24.1 108.1 0 83.5 0 53.8a53.8 53.8 0 0 1 107.6 0c0 29.7-24.1 54.3-53.8 54.3zM447.9 448h-92.7V302.4c0-34.7-.7-79.2-48.3-79.2-48.3 0-55.7 37.7-55.7 76.7V448h-92.8V148.9h89.1v40.8h1.3c12.4-23.5 42.7-48.3 87.9-48.3 94 0 111.3 61.9 111.3 142.3V448z"/>
              </svg>
            </a>
            <div id="copy-link-btn" class="social-icons d-flex justify-content-center align-items-center copy-icon" data-url="<%= blogUrl %>">
              <span id="copy-message" style="display: none;">Link copied!</span>
            </div>
            <% if (user) { %>
              <div class="like-button" id="like-btn" data-blog-id="<%= blog._id %>" data-liked="<%= blog.likes.includes(user ? user.id : '') %>" title="<%= blog.likes.length %>"></div>
            <% } else { %>
              <a href="/login" class="like-button" data-blog-id="<%= blog._id %>" data-liked="<%= blog.likes.includes(user ? user.id : '') %>" title="You must be logged in to like this blog"></a>
            <% } %>
          </div>          
        </div>
        <div class="card-body">
          <a class="text-dark text-decoration-none" href="/blogs/<%= blog._id %>">
            <h5 class="card-title">
              <%= blog.title %>
            </h5>
          </a>
          <p class="card-text border-bottom mb-0 pb-4 position-relative" title="<%= blog.snippet %>">
            <a class="text-dark text-decoration-none" href="/blogs/<%= blog._id %>">
              <%= blog.snippet %>
            </a>
            <a href="/user/profile/<%= blog.author._id %>">
              <img src="<%= blog.author.avatar %>" alt="user avatar" width="50" height="50" class="position-absolute rounded-circle avatar-img">
            </a>
            <a href="/blogs/category/<%= blog.category %>" class="position-absolute rounded category"><%= blog.category %></a>
          </p>
          <a href="/user/profile/<%= blog.author._id %>">
            <blockquote class="blockquote mb-0">
              <footer class="blockquote-footer d-inline-block fs-6 pt-4 mb-0">
                <cite title="<%= blog.author.username %>" class="username">@<%= blog.author.username %> - </cite><cite><%= formatDate(blog.createdAt) %></cite>
              </footer>
            </blockquote>
          </a>
        </div>
      </div>
    <% }) %>
  </div>
<% } else { %>
  <div class="alert alert-success text-center" role="alert">
    <p class="mb-0 fs-5">It seems you haven't created any blogs yet. Why not start one now? Share your thoughts and ideas with the world! <a href="/blogs/create" class="ms-2 link-primary link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover" role="button">Start blogging now!</a></p>
  </div>
<% } %>
<% if (totalPages > 1) { %>
  <nav aria-label="Page navigation">
    <ul class="pagination justify-content-center mt-5">
      <!-- Previous Button -->
      <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
        <a class="page-link" href="<%= currentPage > 1 ? '?page=' + (currentPage - 1) + '&limit=' + limit : '#' %>">Previous</a>
      </li>

      <% 
        // Calculate the range of page numbers to show
        let startPage = Math.max(1, currentPage - 1);
        let endPage = Math.min(totalPages, currentPage + 1);
        
        // Adjust startPage if we don't have enough pages before the current page
        if (endPage - startPage + 1 < 2) {
          startPage = Math.max(1, endPage - 1);
        }

        // Adjust endPage if we don't have enough pages after the current page
        if (endPage - startPage + 1 < 2) {
          endPage = Math.min(totalPages, startPage + 1);
        }
        
        // Display "..." if there are pages before the startPage
        if (startPage > 1) { 
      %>
        <li class="page-item">
          <a class="page-link" href="?page=1&limit=<%= limit %>">1</a>
        </li>
        <% if (startPage > 1) { %>
          <li class="page-item disabled">
            <span class="page-link">...</span>
          </li>
        <% } %>
      <% } %>

      <% 
        // Loop through the pages within the calculated range
        for (let i = startPage; i <= endPage; i++) { 
      %>
        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
          <a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
        </li>
      <% } %>

      <!-- Display "..." if there are pages after the endPage -->
      <% if (endPage < totalPages) { %>
        <% if (endPage < totalPages - 1) { %>
          <li class="page-item disabled">
            <span class="page-link">...</span>
          </li>
        <% } %>
        <li class="page-item">
          <a class="page-link" href="?page=<%= totalPages %>&limit=<%= limit %>"><%= totalPages %></a>
        </li>
      <% } %>

      <!-- Next Button -->
      <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
        <a class="page-link" href="<%= currentPage < totalPages ? '?page=' + (currentPage + 1) + '&limit=' + limit : '#' %>">Next</a>
      </li>
    </ul>
  </nav>
<% } %>

<script>
  const likeButtonsContainer = document.querySelector('.blog-listing-wrapper');

  likeButtonsContainer.addEventListener('click', async (e) => {
    // Handle like button click
    if (e.target && e.target.matches('#like-btn')) {
      const likeButton = e.target;
      e.preventDefault();

      const blogId = likeButton.getAttribute('data-blog-id');
      const isLiked = likeButton.getAttribute('data-liked') === 'true';

      try {
        const response = await fetch(`/blogs/${blogId}/toggle-like`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
        });

        if (response.ok) {
          const data = await response.json();

          if (isLiked) {
            likeButton.setAttribute('data-liked', 'false');
          } else {
            likeButton.setAttribute('data-liked', 'true');
          }

          likeButton.setAttribute('title', `${data.likesCount}`);
        } else {
          console.error('Failed to toggle like');
        }
      } catch (error) {
        console.error('Error:', error);
      }
    }

    // Handle copy link button click
    console.log(e.target)
    if (e.target && e.target.matches('#copy-link-btn')) {
      const url = e.target.getAttribute('data-url');
      if (url) {
        navigator.clipboard.writeText(url).then(() => {
          const message = e.target.querySelector('#copy-message');
          if (message) {
            message.style.display = 'block';
            setTimeout(() => {
              message.style.display = 'none';
            }, 2000);
          }
        }).catch((error) => {
          console.error('Error copying text:', error);
        });
      } else {
        console.error('No URL found for the copy link button');
      }
    }
  });
</script>
